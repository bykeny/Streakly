@model IEnumerable<HabitGoalTrackerApp.Models.ViewModels.JournalEntryListViewModel>
@using HabitGoalTrackerApp.Models.ViewModels

@{
    ViewData["Title"] = "My Journal";
    var stats = ViewBag.Stats as JournalStatsViewModel;
    var userTags = ViewBag.UserTags as List<string> ?? new List<string>();
    var searchTerm = ViewBag.SearchTerm as string;
    var selectedTag = ViewBag.SelectedTag as string;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="h2 mb-1">My Journal</h1>
        <p class="text-muted mb-0">Reflect on your thoughts and experiences</p>
    </div>
    <div class="d-flex gap-2">
        <a asp-action="Stats" class="btn btn-outline-primary">
            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24" class="me-2">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
            Statistics
        </a>
        <a asp-action="Create" class="btn btn-primary">
            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24" class="me-2">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
            </svg>
            New Entry
        </a>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Quick Stats and Filters -->
<div class="row mb-4">
    <div class="col-lg-8">
        <!-- Search and Filter -->
        <div class="card">
            <div class="card-body">
                <form method="get" class="row g-3">
                    <div class="col-md-6">
                        <div class="input-group">
                            <span class="input-group-text">
                                <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                            </span>
                            <input type="text" class="form-control" name="search" value="@searchTerm" placeholder="Search entries...">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <select name="tag" class="form-select">
                            <option value="">All Tags</option>
                            @foreach (var tag in userTags)
                            {
                                <option value="@tag" selected="@(tag == selectedTag)">@tag</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-outline-primary w-100">Filter</button>
                    </div>
                </form>

                @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(selectedTag))
                {
                    <div class="mt-3">
                        <span class="text-muted">Filters: </span>
                        @if (!string.IsNullOrEmpty(searchTerm))
                        {
                            <span class="badge bg-primary me-2">Search: @searchTerm</span>
                        }
                        @if (!string.IsNullOrEmpty(selectedTag))
                        {
                            <span class="badge bg-info me-2">Tag: @selectedTag</span>
                        }
                        <a asp-action="Index" class="btn btn-sm btn-outline-secondary">Clear Filters</a>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <!-- Quick Stats -->
        @if (stats != null)
        {
            <div class="card">
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-4">
                            <div class="stat-number text-primary">@stats.TotalEntries</div>
                            <div class="stat-label">Total</div>
                        </div>
                        <div class="col-4">
                            <div class="stat-number text-success">@stats.CurrentStreak</div>
                            <div class="stat-label">Streak</div>
                        </div>
                        <div class="col-4">
                            <div class="stat-number text-info">@stats.EntriesThisMonth</div>
                            <div class="stat-label">This Month</div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Journal Entries -->
@if (!Model.Any())
{
    <div class="text-center py-5">
        <div class="empty-state-icon mb-4">
            <svg width="80" height="80" fill="none" stroke="currentColor" viewBox="0 0 24 24" class="text-muted">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
            </svg>
        </div>
        <h3 class="h4 text-muted mb-3">
            @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(selectedTag))
            {
                <text>No entries found</text>
            }
            else
            {
                <text>No journal entries yet</text>
            }
        </h3>
        <p class="text-muted mb-4">
            @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(selectedTag))
            {
                <text>Try adjusting your search or filter criteria.</text>
            }
            else
            {
                <text>Start documenting your thoughts and experiences!</text>
            }
        </p>
        <a asp-action="Create" class="btn btn-primary">Write Your First Entry</a>
    </div>
}
else
{
    <div class="row">
        @foreach (var entry in Model)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="journal-card h-100">
                    <div class="card-body d-flex flex-column">
                        <!-- Entry Header -->
                        <div class="d-flex align-items-start justify-content-between mb-3">
                            <div class="flex-grow-1">
                                <h5 class="card-title mb-1">@entry.Title</h5>
                                <small class="text-muted">@entry.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
                            </div>
                            <div class="d-flex align-items-center gap-2">
                                <div class="mood-indicator" style="color: @entry.MoodColor;" title="@entry.Mood">
                                    @entry.MoodEmoji
                                </div>
                                @if (entry.IsFavorite)
                                {
                                    <svg width="16" height="16" fill="currentColor" viewBox="0 0 24 24" class="text-warning">
                                        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                                    </svg>
                                }
                            </div>
                        </div>

                        <!-- Content Preview -->
                        <div class="entry-content mb-3 flex-grow-1">
                            <p class="text-muted mb-0">@entry.ContentPreview</p>
                        </div>

                        <!-- Tags -->
                        @if (entry.Tags.Any())
                        {
                            <div class="entry-tags mb-3">
                                @foreach (var tag in entry.Tags.Take(3))
                                {
                                    <span class="badge bg-light text-dark me-1">#@tag</span>
                                }
                                @if (entry.Tags.Count > 3)
                                {
                                    <span class="badge bg-secondary">+@(entry.Tags.Count - 3)</span>
                                }
                            </div>
                        }

                        <!-- Footer -->
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">@entry.WordCount words</small>
                            <div class="btn-group btn-group-sm">
                                <a asp-action="Details" asp-route-id="@entry.Id" class="btn btn-outline-primary">
                                    <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                    </svg>
                                </a>
                                <button class="btn btn-outline-secondary favorite-btn" data-entry-id="@entry.Id">
                                    <svg width="14" height="14" fill="@(entry.IsFavorite ? "currentColor" : "none")" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                                    </svg>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Favorite toggle functionality
        document.querySelectorAll('.favorite-btn').forEach(button => {
            button.addEventListener('click', function() {
                const entryId = this.dataset.entryId;
                const svg = this.querySelector('svg');

                fetch(`/Journal/ToggleFavorite/${entryId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Toggle the fill attribute
                        const currentFill = svg.getAttribute('fill');
                        svg.setAttribute('fill', currentFill === 'none' ? 'currentColor' : 'none');

                        // Add visual feedback
                        this.classList.add('btn-warning');
                        setTimeout(() => {
                            this.classList.remove('btn-warning');
                        }, 200);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            });
        });
    });
</script>

<style>
    .journal-card {
        transition: all 0.2s ease;
        border: none;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .journal-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .mood-indicator {
        font-size: 1.2rem;
    }

    .entry-content {
        font-size: 0.9rem;
        line-height: 1.5;
    }

    .entry-tags .badge {
        font-size: 0.7rem;
    }

    .stat-number {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        font-size: 0.75rem;
        color: var(--text-muted);
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .empty-state-icon {
        opacity: 0.5;
    }

    .favorite-btn {
        transition: all 0.2s ease;
    }

    .favorite-btn:hover {
        color: #fbbf24;
    }
</style>