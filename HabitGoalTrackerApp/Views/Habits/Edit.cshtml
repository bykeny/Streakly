@using Microsoft.IdentityModel.Tokens
@model HabitGoalTrackerApp.Models.ViewModels.EditHabitViewModel

@{
    ViewData["Title"] = $"Edit - {Model.Title}";
}

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title mb-0">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24" class="me-2">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                    </svg>
                    Edit Habit
                </h3>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <input type="hidden" asp-for="Id" />
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    
                    <div class="row">
                        <div class="col-md-8">
                            <div class="mb-3">
                                <label asp-for="Title" class="form-label fw-semibold">Habit Name *</label>
                                <input asp-for="Title" class="form-control form-control-lg" />
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                            
                            <div class="mb-3">
                                <label asp-for="Description" class="form-label fw-semibold">Description</label>
                                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                            
                            <div class="mb-3">
                                <div class="form-check form-switch">
                                    <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                    <label asp-for="IsActive" class="form-check-label fw-semibold">
                                        Active Habit
                                    </label>
                                </div>
                                <small class="text-muted">Inactive habits won't appear in your daily tracking</small>
                            </div>

                            <!-- Repeat Schedule Section -->
                            <div class="mb-4">
                                <label class="form-label fw-semibold">Repeat Schedule</label>
                                <div class="repeat-schedule-picker">
                                    <div class="mb-3">
                                        <div class="btn-group w-100" role="group" aria-label="Repeat schedule">
                                            <input type="radio" class="btn-check repeat-type-radio" name="RepeatType" id="repeatDaily" value="0" autocomplete="off">
                                            <label class="btn btn-outline-primary" for="repeatDaily">Daily</label>

                                            <input type="radio" class="btn-check repeat-type-radio" name="RepeatType" id="repeatWeekdays" value="1" autocomplete="off">
                                            <label class="btn btn-outline-primary" for="repeatWeekdays">Weekdays</label>

                                            <input type="radio" class="btn-check repeat-type-radio" name="RepeatType" id="repeatWeekends" value="2" autocomplete="off">
                                            <label class="btn btn-outline-primary" for="repeatWeekends">Weekends</label>

                                            <input type="radio" class="btn-check repeat-type-radio" name="RepeatType" id="repeatCustom" value="3" autocomplete="off">
                                            <label class="btn btn-outline-primary" for="repeatCustom">Custom</label>
                                        </div>
                                    </div>
                                    
                                    <!-- Custom Days Selection -->
                                    <div id="customDaysContainer" class="custom-days-container" style="display: none;">
                                        <label class="form-label fw-semibold mb-2">Select Days</label>
                                        <div class="days-picker d-flex gap-3 flex-wrap">
                                            <div class="form-check">
                                                <input class="form-check-input custom-day" type="checkbox" value="0" id="sunday" name="CustomDays">
                                                <label class="form-check-label day-label" for="sunday">Sun</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input custom-day" type="checkbox" value="1" id="monday" name="CustomDays">
                                                <label class="form-check-label day-label" for="monday">Mon</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input custom-day" type="checkbox" value="2" id="tuesday" name="CustomDays">
                                                <label class="form-check-label day-label" for="tuesday">Tue</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input custom-day" type="checkbox" value="3" id="wednesday" name="CustomDays">
                                                <label class="form-check-label day-label" for="wednesday">Wed</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input custom-day" type="checkbox" value="4" id="thursday" name="CustomDays">
                                                <label class="form-check-label day-label" for="thursday">Thu</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input custom-day" type="checkbox" value="5" id="friday" name="CustomDays">
                                                <label class="form-check-label day-label" for="friday">Fri</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input custom-day" type="checkbox" value="6" id="saturday" name="CustomDays">
                                                <label class="form-check-label day-label" for="saturday">Sat</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <!-- Color Selection -->
                            <div class="mb-3">
                                <label class="form-label fw-semibold">Choose Color</label>
                                <div class="color-picker">
                                    <input type="hidden" asp-for="Color" id="selectedColor" />
                                    <div class="color-options d-flex flex-wrap gap-2">
                                        <div class="color-option @(Model.Color == "#3b82f6" ? "active" : "")" data-color="#3b82f6" style="background-color: #3b82f6;" title="Blue"></div>
                                        <div class="color-option @(Model.Color == "#10b981" ? "active" : "")" data-color="#10b981" style="background-color: #10b981;" title="Green"></div>
                                        <div class="color-option @(Model.Color == "#f59e0b" ? "active" : "")" data-color="#f59e0b" style="background-color: #f59e0b;" title="Orange"></div>
                                        <div class="color-option @(Model.Color == "#ef4444" ? "active" : "")" data-color="#ef4444" style="background-color: #ef4444;" title="Red"></div>
                                        <div class="color-option @(Model.Color == "#8b5cf6" ? "active" : "")" data-color="#8b5cf6" style="background-color: #8b5cf6;" title="Purple"></div>
                                        <div class="color-option @(Model.Color == "#06b6d4" ? "active" : "")" data-color="#06b6d4" style="background-color: #06b6d4;" title="Cyan"></div>
                                        <div class="color-option @(Model.Color == "#84cc16" ? "active" : "")" data-color="#84cc16" style="background-color: #84cc16;" title="Lime"></div>
                                        <div class="color-option @(Model.Color == "#f97316" ? "active" : "")" data-color="#f97316" style="background-color: #f97316;" title="Orange"></div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Icon Selection -->
                            <div class="mb-3">
                                <label class="form-label fw-semibold">Choose Icon</label>
                                <div class="icon-picker">
                                    <input type="hidden" asp-for="IconName" id="selectedIcon" />
                                    <div class="icon-options d-flex flex-wrap gap-2">
                                        <div class="icon-option @(Model.IconName == "water" ? "active" : "")" data-icon="water" title="Water">
                                            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                                            </svg>
                                        </div>
                                        <div class="icon-option @(Model.IconName == "exercise" ? "active" : "")" data-icon="exercise" title="Exercise">
                                            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                                            </svg>
                                        </div>
                                        <div class="icon-option @(Model.IconName == "book" ? "active" : "")" data-icon="book" title="Reading">
                                            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                                            </svg>
                                        </div>
                                        <div class="icon-option @(Model.IconName == "meditation" ? "active" : "")" data-icon="meditation" title="Meditation">
                                            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                            </svg>
                                        </div>
                                        <div class="icon-option @(Model.IconName == "sleep" ? "active" : "")" data-icon="sleep" title="Sleep">
                                            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
                                            </svg>
                                        </div>
                                        <div class="icon-option @(Model.IconName == "food" ? "active" : "")" data-icon="food" title="Healthy Eating">
                                            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                                            </svg>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Preview -->
                    <div class="mb-4">
                        <label class="form-label fw-semibold">Preview</label>
                        <div class="habit-preview p-3 border rounded-3">
                            <div class="d-flex align-items-center">
                                <div class="habit-icon me-3" id="previewIcon" style="background-color: @(Model.Color ?? "#3b82f6");">
                                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                </div>
                                <div>
                                    <h6 class="mb-0" id="previewName">@Model.Title</h6>
                                    <small class="text-muted" id="previewDescription">@Model.Description</small>
                                    <br>
                                    <small class="text-info" id="previewSchedule">Every day</small>
                                </div>
                                @if (!Model.IsActive)
                                {
                                    <div class="ms-auto">
                                        <span class="badge bg-secondary">Inactive</span>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-flex gap-3">
                        <button type="submit" class="btn btn-primary">
                            <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24" class="me-2">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                            Save Changes
                        </button>
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Inline JavaScript - This ensures DOM is ready and model data is available -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize repeat type from model
        const repeatType = '@((int)Model.RepeatType)';
        console.log('Initializing with RepeatType:', repeatType);

        const repeatRadio = document.querySelector(`input[name="RepeatType"][value="${repeatType}"]`);
        if (repeatRadio) {
            repeatRadio.checked = true;
            console.log('Set radio button for RepeatType:', repeatType);

            if (repeatType === '3') {
                document.getElementById('customDaysContainer').style.display = 'block';
                console.log('Showing custom days container');

                // Initialize custom days if they exist
                @if (Model.RepeatType == HabitGoalTrackerApp.Models.RepeatType.Custom && Model.CustomDays != null && Model.CustomDays.Any())
                {
                    <text>
                                    const customDays = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.CustomDays));
                                    console.log('Setting custom days:', customDays);
                                    customDays.forEach(day => {
                                        const checkbox = document.querySelector(`.custom-day[value="${day}"]`);
                                        if (checkbox) {
                                            checkbox.checked = true;
                                            console.log('Checked day:', day);
                                        }
                                    });
                    </text>
                }
            }
        } else {
            console.log('Could not find radio button for RepeatType:', repeatType);
        }

    // Color picker functionality
        document.querySelectorAll('.color-option').forEach(option => {
            option.addEventListener('click', function() {
                document.querySelectorAll('.color-option').forEach(opt => opt.classList.remove('active'));
                this.classList.add('active');

                const color = this.dataset.color;
                document.getElementById('selectedColor').value = color;
                document.getElementById('previewIcon').style.backgroundColor = color;
            });
        });

        // Icon picker functionality
        document.querySelectorAll('.icon-option').forEach(option => {
            option.addEventListener('click', function() {
                document.querySelectorAll('.icon-option').forEach(opt => opt.classList.remove('active'));
                this.classList.add('active');

                const icon = this.dataset.icon;
                document.getElementById('selectedIcon').value = icon;

                const previewIcon = document.getElementById('previewIcon');
                previewIcon.innerHTML = this.innerHTML;
            });
        });

        // Repeat schedule functionality
        document.querySelectorAll('.repeat-type-radio').forEach(radio => {
            radio.addEventListener('change', function() {
                const customContainer = document.getElementById('customDaysContainer');
                if (this.value === '3') { // Custom
                    customContainer.style.display = 'block';
                } else {
                    customContainer.style.display = 'none';
                    // Clear custom day selections
                    document.querySelectorAll('.custom-day').forEach(cb => cb.checked = false);
                }
                updatePreviewSchedule();
            });
        });

    // Custom days change handler
    document.querySelectorAll('.custom-day').forEach(checkbox => {
        checkbox.addEventListener('change', updatePreviewSchedule);
    });

        // Custom days change handler
        document.querySelectorAll('.custom-day').forEach(checkbox => {
            checkbox.addEventListener('change', updatePreviewSchedule);
        });

        // Live preview updates
        const nameInput = document.getElementById('Name');
        const descriptionInput = document.getElementById('Description');

        if (nameInput) {
            nameInput.addEventListener('input', function() {
                document.getElementById('previewName').textContent = this.value || 'Habit name';
            });
        }

        if (descriptionInput) {
            descriptionInput.addEventListener('input', function() {
                document.getElementById('previewDescription').textContent = this.value || 'Description';
            });
        }

        function updatePreviewSchedule() {
            const selectedRepeat = document.querySelector('.repeat-type-radio:checked');
            const previewSchedule = document.getElementById('previewSchedule');

            if (!selectedRepeat) return;

            let scheduleText = '';
            switch(selectedRepeat.value) {
                case '0':
                    scheduleText = 'Every day';
                    break;
                case '1':
                    scheduleText = 'Weekdays (Mon-Fri)';
                    break;
                case '2':
                    scheduleText = 'Weekends (Sat-Sun)';
                    break;
                case '3':
                    const selectedDays = Array.from(document.querySelectorAll('.custom-day:checked'))
                        .map(cb => {
                            const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
                            return dayNames[parseInt(cb.value)];
                        });
                    scheduleText = selectedDays.length > 0 ? selectedDays.join(', ') : 'Select days';
                    break;
            }

            previewSchedule.textContent = scheduleText;
        }

        // Initialize preview
        updatePreviewSchedule();
});
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<style>
    .color-option, .icon-option {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid transparent;
        transition: all 0.2s ease;
    }
    
    .color-option:hover, .icon-option:hover {
        transform: scale(1.1);
    }
    
    .color-option.active, .icon-option.active {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
    }
    
    .icon-option {
        background-color: var(--gray-100);
        color: var(--gray-600);
    }
    
    .icon-option.active {
        background-color: var(--primary-color);
        color: white;
    }
    
    .habit-preview {
        background-color: var(--gray-50);
    }

    .custom-days-container {
        background-color: var(--bg-secondary);
        border-radius: 0.5rem;
        padding: 1rem;
        border: 1px solid var(--border-color);
    }

    .day-label {
        font-weight: 500;
        min-width: 40px;
        text-align: center;
        cursor: pointer;
    }

    .form-check {
        margin-bottom: 0;
    }

    .days-picker .form-check {
        flex: 0 0 auto;
    }

    .form-check-input:checked + .day-label {
        color: var(--primary-color);
        font-weight: 600;
    }
</style>